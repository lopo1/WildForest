<template>
	<cover-view class="goodsType-popup"  :style="{height:windowHeight + 'px'}" v-if="show">
		<view class="goodsType" scroll-y="true" :class="{goodsTypeActive:open}">
			<scroll-view class="goodsType-box" scroll-y="true" :show-scrollbar='false' @scrolltolower='onScrollBottom'>
				<view class="fixs" v-for="(item,index) in oms" @tap="onCheck(index)" v-if="type == 1">
					<text class="fix-txt1">{{item.region}}</text>
					<text class="fix-txt2">{{item.prefix}}</text>
				</view>
				<view class="fixs" v-for="(item,index) in oms" @tap="onCheck(index)"v-if="type == 2">
					<text class="fix-txt1">{{item.name}}</text>
					<!-- <text class="fix-txt2">{{item.prefix}}</text> -->
				</view>
			</scroll-view>
			<view class="btns">
				<view class="btn" @tap="onClose">
					<text class="btn-txt">取消</text>
				</view>
			</view>
		</view>
	</cover-view>
</template>

<script>
	const app = getApp().globalData;
	export default {
		watch:{
			getShow(val){
				const _this = this;
				if(val){
					this.show = val;
					this.$nextTick(()=>{
						this.getSystemHeight();
						setTimeout(()=>{
							_this.open = val;
						},300)
					});
				}else{
					this.$nextTick(()=>{
						this.open = val;
						setTimeout(()=>{
							_this.show = val;
						},300);
					})
				}
			},
		},
		data(){
			return{
				open:false,
				show:false,
				windowHeight:0
			}
		},
		props:{
			type:{
				default:1
			},
			getShow:{
				//用于接收
				default:false
			},
			oms:{
				default:[]
			}
		},
		methods:{
			onClose(){
				this.$emit('onClose')
			},
			onCheck(index){
				this.$emit('onCheck',index)
			},
			getSystemHeight(){
				//获取系统可用高度
				this.windowHeight = app.osHeight;
			
			},
			onScrollBottom(){
				this.$emit('onScrollBottom')
			}
		}
	}
</script>

<style scoped lang="scss">
	.goodsType-popup{
		@include ab();
		width: 750rpx;
		border-radius: 8rpx;
		align-items: center;
	}
	.goodsType{
		width: 750rpx;
		height: 800rpx;
		transition-property:transform;
		transition-duration:.2s;
		transform: translateY(800rpx);
		align-items: center;
		border-radius: 10rpx;
		@include ab();
		bottom: 0;
		background-color:#FFF;
	}
	.goodsType-box{
		width: 710rpx;
		flex: 1;
	}
	.goodsTypeActive{
		transform: translateY(0rpx);
	}
	.fixs{
		@include size(710rpx,100rpx,none);
		border-bottom-color: #aaa;
		border-bottom-width: 1rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding-left: 20rpx;
		padding-right: 20rpx;
	}
	.fix-txt1{
		@include font($l,#333);
		@include bold()
	}
	.fix-txt2{
		@include font($l,#333);
		@include bold()
	}
	.btns{
		width: 710rpx;
	}
	.btn{
		@include size(620rpx,80rpx,#1890FF);
		border-radius: 10rpx;
		margin-top: 25rpx;
	}
</style>
